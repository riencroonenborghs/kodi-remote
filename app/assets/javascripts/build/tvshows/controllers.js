// Generated by CoffeeScript 1.9.3
(function() {
  var app;

  app = angular.module("kodiRemote.tvshows.controllers", []);

  app.controller("TvShowsController", [
    "$scope", "$controller", "Topbar", "TvShows", function($scope, $controller, Topbar, TvShows) {
      Topbar.setTitle("TV Shows");
      $scope.listService = TvShows;
      $scope.pushItemsOntoList = function(data) {
        var i, len, ref, tvShow;
        ref = data.tvshows;
        for (i = 0, len = ref.length; i < len; i++) {
          tvShow = ref[i];
          $scope.list.push(tvShow);
        }
        return Topbar.setTitle("TV Shows (" + data.limits.total + ")");
      };
      $controller("PaginatedController", {
        $scope: $scope
      });
      $scope.setItemsOnList = function(data) {
        return $scope.list = data.tvshows;
      };
      $scope.emptyList = function() {
        return $scope.list = [];
      };
      $controller("SearchController", {
        $scope: $scope
      });
      return $scope.visitSeasons = function(tvShowId) {
        return $scope.visit("/tvshows/" + tvShowId + "/seasons");
      };
    }
  ]);

  app.controller("TvShowSeasonsController", [
    "$scope", "$routeParams", "$controller", "Topbar", "TvShowsLoader", function($scope, $routeParams, $controller, Topbar, TvShowsLoader) {
      var detailsLoader, seasonsLoader;
      $scope.tvShowId = parseInt($routeParams.id);
      $scope.visitEpisodes = function(tvShowId, seasonId) {
        return $scope.visit("/tvshows/" + tvShowId + "/seasons/" + seasonId + "/episodes");
      };
      detailsLoader = new TvShowsLoader.DetailsLoader($scope);
      detailsLoader.afterCallback = function(data) {
        return Topbar.setLink("/tvshows", $scope.tvShowDetails.label);
      };
      detailsLoader.show($scope.tvShowId);
      seasonsLoader = new TvShowsLoader.SeasonsLoader($scope);
      return seasonsLoader.index($scope.tvShowId);
    }
  ]);

  app.controller("TvShowSeasonEpisodesController", [
    "$scope", "$routeParams", "Topbar", "TvShowsLoader", "Remote", function($scope, $routeParams, Topbar, TvShowsLoader, Remote) {
      var detailsLoader, seasonsLoader;
      $scope.tvShowId = parseInt($routeParams.tvshowid);
      $scope.seasonId = parseInt($routeParams.id);
      detailsLoader = new TvShowsLoader.DetailsLoader($scope);
      detailsLoader.show($scope.tvShowId);
      seasonsLoader = new TvShowsLoader.SeasonsLoader($scope);
      seasonsLoader.afterCallback = function(data) {
        var i, index, len, ref, results, season;
        ref = data.seasons;
        results = [];
        for (index = i = 0, len = ref.length; i < len; index = ++i) {
          season = ref[index];
          if (season.seasonid === $scope.seasonId) {
            $scope.seasonNumber = index + 1;
            results.push(Topbar.setLink("/tvshows/" + $scope.tvShowId + "/seasons", season.label));
          } else {
            results.push(void 0);
          }
        }
        return results;
      };
      seasonsLoader.index($scope.tvShowId);
      $scope.$watch("seasonNumber", function() {
        var episodesLoader;
        if ($scope.seasonNumber) {
          episodesLoader = new TvShowsLoader.EpisodesLoader($scope);
          return episodesLoader.index($scope.tvShowId, $scope.seasonNumber);
        }
      });
      return $scope.play = function(episode) {
        return Remote.playEpisode(episode.episodeid);
      };
    }
  ]);

}).call(this);
