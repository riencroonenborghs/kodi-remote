// Generated by CoffeeScript 1.9.3
(function() {
  var app;

  app = angular.module("kodiRemote.tvshows.controllers", []);

  app.controller("TvShowsController", [
    "$scope", "Topbar", "Remote", function($scope, Topbar, Remote) {
      var loadPage, page, total;
      Topbar.reset();
      Topbar.addTitle("TV Shows");
      $scope.search = {
        query: ""
      };
      $scope.tvShows = [];
      $scope.morePages = true;
      page = 1;
      total = 0;
      $scope.visitSeasons = function(tvShowId) {
        return $scope.visit("/tvshows/" + tvShowId + "/seasons");
      };
      $scope.nextPage = function() {
        page += 1;
        return loadPage();
      };
      loadPage = function() {
        $scope.loading = true;
        return Remote.videoLibrary.tvShows.index(page).then(function(data) {
          var i, len, ref, tvShow;
          $scope.loading = false;
          ref = data.tvshows;
          for (i = 0, len = ref.length; i < len; i++) {
            tvShow = ref[i];
            $scope.tvShows.push(tvShow);
          }
          total = data.limits.total;
          $scope.morePages = (page * 10) < total;
          Topbar.addTitle("TV Shows (" + data.limits.total + ")");
        });
      };
      loadPage();
      return $scope.searchTVShows = function() {
        if ($scope.search.query.length > 2) {
          $scope.loading = true;
          return Remote.videoLibrary.tvShows.search($scope.search.query).then(function(data) {
            $scope.morePages = false;
            $scope.loading = false;
            $scope.tvShows = data.tvshows;
          });
        } else {
          page = 1;
          $scope.morePages = true;
          $scope.tvShows = [];
          return loadPage();
        }
      };
    }
  ]);

  app.controller("TvShowSeasonsController", [
    "$scope", "$routeParams", "Topbar", "Remote", function($scope, $routeParams, Topbar, Remote) {
      $scope.tvShowId = parseInt($routeParams.id);
      $scope.visitEpisodes = function(tvShowId, seasonId) {
        return $scope.visit("/tvshows/" + tvShowId + "/seasons/" + seasonId + "/episodes");
      };
      Remote.videoLibrary.tvShows.show($scope.tvShowId).then(function(data) {
        $scope.tvShowDetails = data.tvshowdetails;
        Topbar.reset();
        return Topbar.addLink("/tvshows", data.tvshowdetails.label);
      });
      $scope.loading = true;
      $scope.seasons = [];
      return Remote.videoLibrary.tvShows.seasons.index($scope.tvShowId).then(function(data) {
        $scope.loading = false;
        $scope.seasons = data.seasons;
      });
    }
  ]);

  app.controller("TvShowSeasonEpisodesController", [
    "$scope", "$routeParams", "Topbar", "Remote", function($scope, $routeParams, Topbar, Remote) {
      $scope.tvShowId = parseInt($routeParams.tvshowid);
      $scope.seasonId = parseInt($routeParams.id);
      $scope.tvShowDetails = null;
      $scope.episodes = [];
      $scope.seasonNumber = null;
      $scope.loading = true;
      Remote.videoLibrary.tvShows.show($scope.tvShowId).then(function(data) {
        return $scope.tvShowDetails = data.tvshowdetails;
      });
      Remote.videoLibrary.tvShows.seasons.index($scope.tvShowId).then(function(data) {
        var i, index, len, ref, results, season;
        ref = data.seasons;
        results = [];
        for (index = i = 0, len = ref.length; i < len; index = ++i) {
          season = ref[index];
          if (season.seasonid === $scope.seasonId) {
            $scope.seasonNumber = index + 1;
            Topbar.reset();
            results.push(Topbar.addLink("/tvshows/" + $scope.tvShowId + "/seasons", season.label));
          } else {
            results.push(void 0);
          }
        }
        return results;
      });
      return $scope.$watch("seasonNumber", function(current, old) {
        console.debug(current);
        if (current) {
          return Remote.videoLibrary.tvShows.seasons.episodes.index($scope.tvShowId, $scope.seasonNumber).then(function(data) {
            $scope.loading = false;
            $scope.episodes = data.episodes;
          });
        }
      });
    }
  ]);

}).call(this);
