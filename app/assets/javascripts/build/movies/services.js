// Generated by CoffeeScript 1.9.3
(function() {
  var app,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  app = angular.module("kodiRemote.movies.services", []);

  app.service("Movies", [
    "KodiRequest", function(KodiRequest) {
      var movieProperties, service;
      movieProperties = ["plot", "year", "rating", "genre", "art", "tagline", "runtime", "playcount"];
      return service = {
        perPage: 10,
        index: function(page, sortBy, sortDirection) {
          var params;
          if (page == null) {
            page = 1;
          }
          if (sortBy == null) {
            sortBy = "label";
          }
          if (sortDirection == null) {
            sortDirection = "ascending";
          }
          params = {
            properties: movieProperties,
            sort: {
              method: sortBy,
              order: sortDirection
            },
            limits: {
              start: (page - 1) * this.perPage,
              end: page * this.perPage
            }
          };
          return KodiRequest.methodRequest("VideoLibrary.GetMovies", params);
        },
        show: function(movieId) {
          var properties;
          properties = ["cast", "fanart", "director", "writer", "studio", "mpaa"];
          return KodiRequest.methodRequest("VideoLibrary.GetMovieDetails", {
            movieid: movieId,
            properties: properties
          });
        },
        Search: {
          query: function(query) {
            var params;
            params = {
              properties: movieProperties,
              filter: {
                field: "title",
                operator: "contains",
                value: query
              }
            };
            return KodiRequest.methodRequest("VideoLibrary.GetMovies", params);
          },
          genre: function(genre) {
            var params;
            params = {
              properties: movieProperties,
              filter: {
                field: "genre",
                operator: "is",
                value: genre
              }
            };
            return KodiRequest.methodRequest("VideoLibrary.GetMovies", params);
          }
        }
      };
    }
  ]);

  app.service("MoviesLoader", [
    "Movies", function(Movies) {
      var MovieDetailsLoader, service;
      service = {
        DetailsLoader: MovieDetailsLoader = (function(superClass) {
          extend(MovieDetailsLoader, superClass);

          function MovieDetailsLoader(scope) {
            this.scope = scope;
            MovieDetailsLoader.__super__.constructor.call(this, this.scope, Movies);
          }

          MovieDetailsLoader.prototype.handleData = function(data) {
            return this.scope.movieDetails = data.moviedetails;
          };

          return MovieDetailsLoader;

        })(kodiRemote.Loader)
      };
      return service;
    }
  ]);

}).call(this);
