// Generated by CoffeeScript 1.9.3
(function() {
  var app, kodiRemote,
    slice = [].slice;

  kodiRemote = window.kodiRemote || (window.kodiRemote = {});

  app = angular.module("kodiRemote", ["ngAria", "ngAnimate", "ngMaterial", "ngMdIcons", "ngRoute", "kodiRemote.controllers", "kodiRemote.services", "kodiRemote.directives", "kodiRemote.tvshows.controllers", "kodiRemote.tvshows.services", "kodiRemote.movies.controllers", "kodiRemote.movies.services", "kodiRemote.settings.controllers", "kodiRemote.remote.controllers", "kodiRemote.remote.services"]);

  app.config(function($mdThemingProvider) {
    return $mdThemingProvider.theme("default").primaryPalette("blue").accentPalette("green");
  });

  kodiRemote.settings = {
    server: null,
    port: null
  };

  app.config(function($routeProvider, $locationProvider) {
    $routeProvider.when("/settings", {
      templateUrl: "app/views/settings/index.html",
      controller: "SettingsController"
    }).when("/tvshows", {
      templateUrl: "app/views/tvshows/index.html",
      controller: "TvShowsController"
    }).when("/tvshows/:id/seasons", {
      templateUrl: "app/views/tvshows/seasons/index.html",
      controller: "SeasonsController"
    }).when("/tvshows/:tvshowid/seasons/:id/episodes", {
      templateUrl: "app/views/tvshows/seasons/episodes/index.html",
      controller: "EpisodesController"
    }).when("/movies", {
      templateUrl: "app/views/movies/index.html",
      controller: "MoviesController"
    }).when("/movies/:id", {
      templateUrl: "app/views/movies/show.html",
      controller: "MovieController"
    }).when("/remote", {
      templateUrl: "app/views/remote/index.html",
      controller: "RemoteController"
    }).otherwise("/tvshows", {
      templateUrl: "app/views/tvshows/index.html",
      controller: "TvShowsController"
    });
    return $locationProvider.html5Mode(true);
  });

  app.filter("secondsToDateTime", [
    function() {
      return function(seconds) {
        return new Date(1970, 0, 1).setSeconds(seconds);
      };
    }
  ]);

  app.filter("zeroPrepend", [
    function() {
      return function(input, length) {
        var inputString, zeroes;
        inputString = new String(input);
        zeroes = "0".repeat(length - inputString.length);
        return "" + zeroes + input;
      };
    }
  ]);

  kodiRemote.Loader = (function() {
    function _Class(scope, service) {
      this.scope = scope;
      this.service = service;
      return;
    }

    _Class.prototype.handleData = function(data) {};

    _Class.prototype.afterCallback = function(data) {};

    _Class.prototype._baseMethod = function() {
      var method, params, ref;
      method = arguments[0], params = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      this.scope.loading = true;
      return (ref = this.service)[method].apply(ref, params).then((function(_this) {
        return function(data) {
          _this.scope.loading = false;
          _this.handleData(data);
          return _this.afterCallback(data);
        };
      })(this));
    };

    _Class.prototype.index = function() {
      var params;
      params = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return this._baseMethod.apply(this, ["index"].concat(slice.call(params)));
    };

    _Class.prototype.show = function() {
      var params;
      params = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return this._baseMethod.apply(this, ["show"].concat(slice.call(params)));
    };

    return _Class;

  })();

}).call(this);
