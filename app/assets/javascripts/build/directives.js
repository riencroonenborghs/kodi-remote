// Generated by CoffeeScript 1.9.3
(function() {
  var app;

  app = angular.module("kodiRemote.directives", []);

  app.directive("loadingScreen", [
    function() {
      return {
        restrict: "E",
        scope: {
          loading: "="
        },
        templateUrl: "app/views/loading.html"
      };
    }
  ]);

  app.directive("artPoster", [
    function() {
      return {
        restrict: "E",
        replace: true,
        scope: {
          art: "="
        },
        template: "<img src='{{poster}}' class='art-poster' />",
        controller: [
          "$scope", function($scope) {
            $scope.poster = "";
            if ($scope.art.poster) {
              $scope.poster = decodeURIComponent($scope.art.poster.replace("image://", ""));
              return $scope.poster = $scope.poster.slice(0, -1);
            }
          }
        ]
      };
    }
  ]);

  app.directive("tvshowThumbnail", [
    function() {
      return {
        restrict: "E",
        replace: true,
        scope: {
          thumbnail: "="
        },
        template: "<img src='{{thumb}}' class='art-thumb' />",
        controller: [
          "$scope", function($scope) {
            $scope.thumb = decodeURIComponent($scope.thumbnail.replace("image://", ""));
            return $scope.thumb = $scope.thumb.slice(0, -1);
          }
        ]
      };
    }
  ]);

  app.directive("showRating", [
    function() {
      return {
        restrict: "E",
        replace: true,
        scope: {
          rating: "="
        },
        template: "<span ng-repeat='star in stars track by $index'><ng-md-icon icon='{{star}}' size='8' style='fill: grey;'></ng-md-icon></span>",
        controller: [
          "$scope", function($scope) {
            $scope.stars = ["star_outline", "star_outline", "star_outline", "star_outline", "star_outline"];
            if ($scope.rating >= 1) {
              $scope.stars[0] = "star_half";
            }
            if ($scope.rating >= 2) {
              $scope.stars[0] = "star";
            }
            if ($scope.rating >= 3) {
              $scope.stars[1] = "star_half";
            }
            if ($scope.rating >= 4) {
              $scope.stars[1] = "star";
            }
            if ($scope.rating >= 5) {
              $scope.stars[2] = "star_half";
            }
            if ($scope.rating >= 6) {
              $scope.stars[2] = "star";
            }
            if ($scope.rating >= 7) {
              $scope.stars[3] = "star_half";
            }
            if ($scope.rating >= 8) {
              $scope.stars[3] = "star";
            }
            if ($scope.rating >= 9) {
              return $scope.stars[4] = "star_half";
            }
          }
        ]
      };
    }
  ]);

  app.directive("runtime", [
    function() {
      return {
        restrict: "E",
        scope: {
          seconds: "="
        },
        template: "{{hours | number}}:{{minutes | number}}",
        controller: [
          "$scope", function($scope) {
            $scope.hours = $scope.seconds / 3600;
            $scope.runtime = $scope.runtime % 3600;
            return $scope.minutes = $scope.seconds / 60;
          }
        ]
      };
    }
  ]);

  app.directive("circleAvatar", [
    function() {
      return {
        restrict: "E",
        scope: {
          label: "="
        },
        template: "<div class='circle-avatar'>{{initials}}</div>",
        controller: [
          "$scope", function($scope) {
            var parts;
            parts = $scope.label.split(" ");
            $scope.initials = parts[0][0];
            if (parts.length === 1) {
              return $scope.initials = parts[0][0] + parts[0][1];
            } else {
              return $scope.initials = parts[0][0] + parts[1][0];
            }
          }
        ]
      };
    }
  ]);

  app.directive("autoScroll", [
    "$compile", function($compile) {
      return {
        restrict: "A",
        link: function(scope, element, attrs) {
          var button, elementVisible, scrollHandler;
          button = $("<md-button>").attr("ng-click", "nextPage()").html("Next Page");
          $compile(button)(scope);
          element.append(button);
          elementVisible = function(elem) {
            var $elem, $window, docViewBottom, docViewTop, elemBottom, elemTop;
            $elem = $(elem);
            $window = $(window);
            docViewTop = $window.scrollTop();
            docViewBottom = docViewTop + $window.height();
            elemTop = $elem.offset().top;
            elemBottom = elemTop + $elem.height();
            return (elemBottom <= docViewBottom) && (elemTop >= docViewTop);
          };
          scrollHandler = function() {
            if (!scope.morePages) {
              button.hide();
            }
            if (elementVisible(button) && !scope.loading && scope.morePages) {
              return scope.nextPage();
            }
          };
          $(document).off("scroll", scrollHandler);
          return $(document).on("scroll", scrollHandler);
        },
        controller: ["$scope", function($scope) {}]
      };
    }
  ]);

}).call(this);
